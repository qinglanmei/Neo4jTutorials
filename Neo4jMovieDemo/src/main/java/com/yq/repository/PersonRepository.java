package com.yq.repository;import com.yq.domain.Person;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.neo4j.annotation.Query;import org.springframework.data.neo4j.repository.Neo4jRepository;import org.springframework.data.repository.query.Param;import java.util.Collection;/** */public interface PersonRepository extends Neo4jRepository<Person, Long> , CustomizedRepository<Person> {	Person findByfirstName(@Param("firstName") String firstName);	Collection<Person> findByfirstNameLike(@Param("firstName") String firstName);	// returns a Page of Actors that have a ACTS_IN relationship to the movie node with the title equal to movieTitle parameter.	@Query(value = "MATCH (movie:Movie {title:{0}})<-[:ACTED_IN]-(p:Person) RETURN p",			countQuery= "MATCH (movie:Movie {title:{0}})<-[:ACTED_IN]-(p:Person) RETURN count(p)")	Page<Person> getActorsThatActInAmoviesFromTitle(String movieTitle, Pageable pageable );}